version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: weather-forecast-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: weather_forecast
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - weather-network

  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: weather-forecast-api
    command: npm run start:dev  
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    environment:
      PORT: 3000
      NODE_ENV: development
      BASE_URL: http://localhost:3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: weather_forecast
      WEATHER_API_KEY: ${WEATHER_API_KEY}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_SECURE: ${EMAIL_SECURE}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      EMAIL_FROM: ${EMAIL_FROM}
    networks:
      - weather-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

volumes:
  postgres_data:

networks:
  weather-network:
    driver: bridge